MuPDF[1] rendering library is used to do the actual work, so it needs
to be built and installed to use llpp, MuPDF's README[2] describes how
to build it and lists its dependencies. Snapshots of MuPDF itself can
be found here[3]

Note that MuPDF is a moving target therefore bellow is the commit id
of the git version of MuPDF that this version of llpp is known to work
with:
6d869a15eb33bdda06a737d2af6c04139e2b3bfe

llpp also depends on OCaml[4], lablGL[5], having a C compiler wouldn't
hurt either.

To build llpp "the easy way" one can invoke `sh buildall.sh' which
will first attempt to automatically fetch lablGL, mupdf, mupdf's
prerequisites and build them, then, if everything goes fine, it will
proceed building llpp itself. Note that OCaml still needs to be
installed separately, also, in addition to the usual suspects (i.e.
GCC, make, binutils, OCaml), you will need `wget' and `unzip' for this
script to work.

Otherwise, provided that all prereqs are already built, one should
invoke `sh build.sh' from the top of llpp's directory, prior to that
it's advisable to review build.sh so that it matches local mupdf
installation (or lack thereof)

If everything goes fine llpp binary will appear, it can be used like so:

$ ./llpp /path/to/some.pdf
or
$ ./llpp -p password /path/to/some.password.protected.pdf

[1] http://www.mupdf.com
[2] http://mupdf.com/repos/mupdf/README
[3] http://mupdf.com/download/snapshots/
[4] http://caml.inria.fr/
[5] http://wwwfun.kurims.kyoto-u.ac.jp/soft/lsl/lablgl.html
