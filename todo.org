* TODO progressive zoom
* TODO Fixme
** TODO linknav + presentation (link might not fit the visible area)
   fullscreening while loading complex documents has visual quirks
* TODO outline for cbz
  file names? exif?
* TODO build.bash
** TODO Parallel builds
** TODO Removing .mlis leads to build errors
   Nuking everything (or just deleting .deps?) solves it though
** DONE errors in config.ml (!)
   CLOSED: [2020-08-09 Sun 08:53]
   they do not lead to aborted compilation
*** recipe: making a fresh error and compiling
    (so that both config.ml and stuff that depends on it is being rebuilt by build.bash)
* TODO [maybe] inside rect/quad (_Generic)
* TODO Shift-insert for searches
* TODO Threaded rendering
  Scrolling documents with pgdown on a 3840x2160 monitor utilizing
  just 2 threads (event loop, display/mupdf rendering) is not fast
  enough.
* TODO wikit - https://github.com/moosotc/llpp/issues/128
* TODO bindcode
* DONE fix build system
  CLOSED+: [2020-10-24 Sat 22:04]
  failure scenario:
  at the end of the utils add:
    let u = ();;
  rebuild
  change u to
    let u = fail;;
  build would not stop at the first compilation failure

  issue is manifold:
    a) die doesn't really
    b) especially in bocaml where subshell was used ("(" instead of "{")
       why? i don't remember :(
* DONE ? stderr
  CLOSED: [2020-10-25 Sun 10:48]
  cf. 89c908a345f2b6a0f0e15ba2009c87c880b95cb8
  ml_spawn uses posix_spawn (/bin/sh -c ...)
  /bin/sh reparts errors via stderr, thus making them
  completely hidden from the UI
  maybe it makes sense to pipe leftover errmsgs to some congiurable sink
